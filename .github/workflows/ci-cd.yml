name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: loadboard_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies - automation-service
      working-directory: ./automation-service
      run: npm ci
      
    - name: Build - automation-service
      working-directory: ./automation-service
      run: npm run build
      
    - name: Lint - automation-service
      working-directory: ./automation-service
      run: npm run lint
      
    - name: Test - automation-service
      working-directory: ./automation-service
      run: npm test
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: loadboard_test
        GPT_SERVICE_URL: http://localhost:3001
      
    - name: Install dependencies - gpt-service
      working-directory: ./gpt-service
      run: npm ci
      
    - name: Build - gpt-service
      working-directory: ./gpt-service
      run: npm run build
      
    - name: Lint - gpt-service
      working-directory: ./gpt-service
      run: npm run lint
      
    - name: Test - gpt-service
      working-directory: ./gpt-service
      run: npm test
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: loadboard_test
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  build-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push automation-service
      uses: docker/build-push-action@v4
      with:
        context: ./automation-service
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/loadboard-automation:latest
        
    - name: Build and push gpt-service
      uses: docker/build-push-action@v4
      with:
        context: ./gpt-service
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/loadboard-gpt:latest