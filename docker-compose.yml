version: '3.8'

services:
  automation-service:
    build:
      context: ./automation-service
      dockerfile: Dockerfile
    container_name: automation-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - GPT_SERVICE_URL=http://gpt-service:3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=loadboard
    volumes:
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    networks:
      - loadboard-network
    depends_on:
      - postgres
      
  gpt-service:
    build:
      context: ./gpt-service
      dockerfile: Dockerfile
    container_name: gpt-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=loadboard
    volumes:
      - ./logs:/app/logs
    ports:
      - "3001:3001"
    networks:
      - loadboard-network
    depends_on:
      - postgres
      
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=loadboard
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - loadboard-network
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - loadboard-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

networks:
  loadboard-network:
    driver: bridge

volumes:
  postgres-data:
  prometheus-data: